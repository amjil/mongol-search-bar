(ns virtual-keyboard.example.styled
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter.alpha2 :as f]
   [virtual-keyboard.keyboard :as keyboard]
   [virtual-keyboard.keyboard-candidates :as candidates]))

(declare body)

(def keyboard-style 
  {:key-cap-border-radius 6
   :key-container-color (-> m/Colors .blueGrey .-shade400)})

(defn styled []
  (f/widget
   :context ctx
   :managed [^m/TextEditingController text-controller (m/TextEditingController)]
   :bind {:text-controller text-controller}
   (m/Scaffold
    .resizeToAvoidBottomInset true
    .appBar (m/AppBar
             .title (m/Text "Virtual Keyboard"))
    .body
    (body))))

;; 
(defn body []
  (f/widget
   :context ctx
   :get [:text-controller]
   :let [width  (-> m/MediaQuery (.of ctx) .-size .-width)
         height (-> m/MediaQuery (.of ctx) .-size .-height)
         state (atom {})]
   (m/SafeArea)
   .child
   (m/Center)
   .child
   (m/Column
    .children
    [(m/Container
      .height 200
      .width 200
      .child
      (mgl/MongolTextField
       .controller text-controller
       .maxLines 500
       .autofocus true
       .decoration (m/InputDecoration .border (m/OutlineInputBorder))))
     (m/ElevatedButton
      .child (m/Text "Open")
      .onPressed #(candidates/insert-overlay ctx state))
     (m/ElevatedButton
      .child (m/Text "Close")
      .onPressed #(candidates/remove-overlay state))
     (m/Expanded .child (m/Container))
     (m/Container
      .color (-> m/Colors .grey .-shade300)
      .child
      (keyboard/keyboard
       keyboard-style text-controller))])))